#BlueJ class context
comment0.target=BalanzasC
comment0.text=\n2-\ A\ \u2013\ Definir\ una\ clase\ para\ representar\ balanzas\ comerciales\ (para\ ser\ utilizadas\ en\ verduler\u00EDas,\ carnicer\u00EDas,\ etc).\ \nUna\ balanza\ comercial\ s\u00F3lo\ mantiene\ el\ monto\ y\ la\ cantidad\ de\ items\ \ncorrespondientes\ a\ la\ compra\ actual\ (es\ decir,\ no\ almacena\ los\ \u00EDtems\ de\ la\ compra).\ \nLa\ balanza\ debe\ responder\ a\ los\ siguientes\ mensajes\:\ \n\ \ \ \ \u2022\ iniciarCompra()\:\ inicializa\ el\ monto\ y\ cantidad\ de\ \u00EDtems\ de\ la\ compra\ actual.\ \n\ \ \ \ \u2022\ registrarProducto(pesoEnKg,\ precioPorKg)\:\ recibe\ el\ peso\ en\ kg\ del\ \u00EDtem\ comprado\ y\ su\ precio\ por\ kg,\ debiendo\ \n\ \ \ \ realizar\ las\ actualizaciones\ en\ el\ estado\ de\ la\ balanza.\ \n\ \ \ \ \u2022\ devolverMontoAPagar()\:\ retorna\ el\ monto\ de\ la\ compra\ actual.\ \n\ \ \ \ \u2022\ devolverResumenDeCompra()\:\ retorna\ un\ String\ del\ siguiente\ estilo\ \u201CTotal\ a\ pagar\ X\ por\ la\ compra\ de\ Y\ productos\u201D\ ,\n\ \ \ \ donde\ X\ es\ el\ monto\ e\ Y\ es\ la\ cantidad\ de\ \u00EDtems\ de\ la\ compra.\n
comment1.params=
comment1.target=void\ iniciarCompra()
comment2.params=unPesoEnKg\ unPrecioPorKg
comment2.target=void\ registrarProducto(java.lang.Double,\ java.lang.Double)
comment3.params=
comment3.target=java.lang.Double\ devolverMontoAPagar()
comment4.params=
comment4.target=java.lang.String\ devolverResumenDeCompra()
numComments=5
