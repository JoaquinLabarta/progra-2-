#BlueJ class context
comment0.target=Flota
comment0.text=\n\ 4-A-\ Definir\ una\ clase\ para\ representar\ flotas\ de\ micros.\ Una\ flota\ se\ caracteriza\ por\ conocer\ a\ los\ \n\ micros\ que\ la\ componen\ (a\ lo\ sumo\ 15).\ \n\ \ \ \ i.\ Defina\ un\ constructor\ para\ crear\ una\ flota\ vac\u00EDa\ (sin\ micros)\n\ \ \ \ Implemente\ m\u00E9todos\ para\:\n\ \ \ \ ii.\ devolver\ si\ la\ flota\ est\u00E1\ completa\ (tiene\ 15\ micros)\ o\ no.\n\ \ \ \ iii.\ agregar\ a\ la\ flota\ un\ micro\ recibido\ como\ par\u00E1metro.\n\ \ \ \ iv.\ eliminar\ de\ la\ flota\ el\ micro\ con\ patente\ igual\ a\ una\ recibida\ como\ par\u00E1metro.\n\ \ \ \ v.\ buscar\ en\ la\ flota\ un\ micro\ con\ patente\ igual\ a\ una\ recibida\ como\ par\u00E1metro\ y\ \n\ \ \ \ retornarlo\ (en\ caso\ de\ no\ existir\ dicho\ micro,\ retornar\ NULL).\ \n\ \ \ \ vi.\ buscar\ en\ la\ flota\ un\ micro\ con\ destino\ igual\ a\ uno\ recibido\ como\ par\u00E1metro\ y\ \n\ \ \ \ retornarlo\ (en\ caso\ de\ no\ existir\ dicho\ micro,\ retornar\ NULL).\n
comment1.params=
comment1.target=Flota()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Flota\n
comment2.params=
comment2.target=boolean\ estaCompleta()
comment3.params=m
comment3.target=void\ agregarMicro(Micro)
comment4.params=pat
comment4.target=void\ eliminarMicro(java.lang.String)
comment5.params=pat
comment5.target=Micro\ buscarMicroPorPatente(java.lang.String)
comment5.text=\ v.\ buscar\ en\ la\ flota\ un\ micro\ con\ patente\ igual\ a\ una\ recibida\ como\ par\u00E1metro\ y\ retornarlo\ (en\ caso\ de\ no\ existir\ dicho\ \nmicro,\ retornar\ NULL)\ *
comment6.params=dest
comment6.target=Micro\ buscarMicroPorDestino(java.lang.String)
comment6.text=\ vi.\ buscar\ en\ la\ flota\ un\ micro\ con\ destino\ igual\ a\ uno\ recibido\ como\ par\u00E1metro\ y\ \nretornarlo\ (en\ caso\ de\ no\ existir\ dicho\ micro,\ retornar\ NULL).\ *
comment7.params=
comment7.target=void\ imprimir()
numComments=8
